// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package domain

type ListJoinedTag []JoinedTag

func (list ListJoinedTag) areSame(item1 JoinedTag, item2 JoinedTag) bool {
	return item1 == item2
}

func NewListJoinedTag(items ...JoinedTag) ListJoinedTag {
	slice := make([]JoinedTag, 0)
	for _, item := range items {
		slice = append(slice, item)
	}
	return slice
}

//TODO - handle comparors
func (list ListJoinedTag) AppendIfUnique(item JoinedTag) ListJoinedTag {
	if list.Contains(item) == false {
		return append(list, item)
	}
	return list
}

func (list ListJoinedTag) Contains(item JoinedTag) bool {
	for _, listItem := range list {
		if list.areSame(listItem, item) {
			return true
		}
	}
	return false
}

func (list ListJoinedTag) Remove(items ...JoinedTag) ListJoinedTag {
	newList := NewListJoinedTag()
	toRemove := NewListJoinedTag(items...)
	for _, existingItem := range list {
		if !toRemove.Contains(existingItem) {
			newList = append(newList, existingItem)
		}
	}
	return newList
}

func (list ListJoinedTag) IndexOf(item JoinedTag) int {
	for index, existingItem := range list {
		if list.areSame(existingItem, item) {
			return index
		}
	}
	return -1
}
